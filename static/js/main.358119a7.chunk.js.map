{"version":3,"sources":["Card-indiviual/cardindividual.jsx","Card-Component/cardcomponent.jsx","SearchBox/searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardIndividual","props","className","alt","src","monster","id","name","email","CardComponent","monsters","map","SearchBox","type","placeholder","onChange","changed","App","event","setState","search","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAGaA,G,kBAAgB,SAACC,GAC1B,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJjBC,EAAe,SAACR,GACzB,OAAQ,qBAAKC,UAAU,YAAf,SACHD,EAAMS,SAASC,KACd,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAiCA,QAASA,GAArBA,EAAQC,UCJrCM,G,MAAW,SAACX,GACrB,OACI,8BACI,uBAAOC,UAAU,SAASW,KAAK,SAASC,YAAab,EAAMa,YAAaC,SAAUd,EAAMe,cC+BrFC,E,kDA/Bb,aAAe,IAAD,8BACZ,gBAMFD,QAAQ,SAACE,GACP,EAAKC,SAAS,CAACC,OAAOF,EAAMG,OAAOC,SANnC,EAAKC,MAAM,CACTb,SAAS,GACTU,OAAO,IAJG,E,gEAUO,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,+BAE7B,IAAD,EACmBC,KAAKN,MAAxBb,EADA,EACAA,SAASU,EADT,EACSA,OACVU,EAAmBpB,EAASqB,QAChC,SAAA1B,GAAO,OAAGA,EAAQE,KAAKyB,cAAcC,SAASb,EAAOY,kBAEvD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWY,YAAY,iBAAiBE,QAASa,KAAKb,UAEtD,cAAC,EAAD,CAAeN,SAAUoB,W,GA1BfI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.358119a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './cardindividual.css';\r\n\r\nexport const CardIndividual =(props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './cardcomponent.css';\r\nimport { CardIndividual } from '../Card-indiviual/cardindividual';\r\n\r\nexport const CardComponent =(props)=>{\r\n    return (<div className=\"card-list\">\r\n        {props.monsters.map(\r\n          monster => <CardIndividual key={monster.id} monster={monster} />\r\n        )}\r\n    </div>);\r\n}","import React from 'react';\r\nimport './searchbox.css';\r\n\r\nexport const SearchBox =(props) => {\r\n    return (\r\n        <div>\r\n            <input className=\"search\" type=\"search\" placeholder={props.placeholder} onChange={props.changed} />\r\n        </div>\r\n    );\r\n}","import './App.css';\nimport React, {Component} from 'react';\nimport { CardComponent } from './Card-Component/cardcomponent';\nimport { SearchBox } from './SearchBox/searchbox';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state={\n      monsters:[],\n      search:''\n  };\n  }\n  changed=(event) => {\n    this.setState({search:event.target.value});\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n  render() {\n    const {monsters,search} = this.state;\n    const filteredMonsters = monsters.filter(\n      monster=> monster.name.toLowerCase().includes(search.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Doodles</h1>\n        <SearchBox placeholder=\"Search monster\" changed={this.changed} />\n       \n        <CardComponent monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}